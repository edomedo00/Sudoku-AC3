function AC-3(csp) returns false if an inconsistency is found and true otherwise
 inputs: csp, a binary CSP with components (X, D, C)
 local variables: queue, a queue of arcs, initially all the arcs in csp

 while queue is not empty do
   (Xi, Xj) ← REMOVE-FIRST(queue)
   if REVISE(csp, Xi, Xj) then
     if size of Di = 0 then return false
     for each Xk in Xi.NEIGHBORS − {Xj} do
      add(Xk, Xi) to queue
 return true

function REVISE(csp, Xi, Xj) returns true if we revise the domain of Xi
 revised ← false
 for each x in Di do
   if no value y in Dj allows (x, y) to satisfy the constraint between Xi and Xj then
    delete x from Di
    revised ← true
 return revised



def solve
  global grid
    for y in range(9):
      for x in range(9):
        if grid[y][x] == 0:
          for n in range(1,10):
            if possible(y,x,n) : 
              grid[y][x] = n
              solve()
              grid[y][x] = 0
          return 